SET 3 	# shuffle: set procedure position
STORE 104
JUMP 182 	# shuffle: jump over procedure code
SET 102
STORE 1
SET 5
STOREI 1
SET 103
STORE 1
SET 1
STOREI 1
SET 1 	# FOR start
STORE 50
SET 1
STORE 107
LOAD 101
LOADI 0
STORE 108
LOAD 107
STORE 106
LOAD 108 	# FOR loop condition
SUB 106
JNEG 154
SET 103
STORE 1
SET 103
LOADI 0
STORE 30
SET 102
LOADI 0
STORE 31
SET 0
STORE 32
SET 1
STORE 37
LOAD 30
JPOS 10
JZERO 9
LOAD 37
SUB 37
SUB 37
STORE 37
LOAD 30
SUB 30
SUB 30
STORE 30
LOAD 31
JPOS 10
JZERO 9
LOAD 37
SUB 37
SUB 37
STORE 37
LOAD 31
SUB 31
SUB 31
STORE 31
LOAD 30
SUB 31
JPOS 10
LOAD 30
ADD 31
STORE 30
LOAD 30
SUB 31
STORE 31
LOAD 30
SUB 31
STORE 30
LOAD 31
JZERO 17
JNEG 16
LOAD 31
HALF
ADD 0
SUB 31
JZERO 4
LOAD 32
ADD 30
STORE 32
LOAD 30
ADD 30
STORE 30
LOAD 31
HALF
STORE 31
JUMP -17
LOAD 37
JPOS 5
LOAD 32
SUB 32
SUB 32
STORE 32
LOAD 32
STOREI 1
SET 103
STORE 1
SET 103
LOADI 0
STORE 30
LOAD 101
LOADI 0
STORE 31
SET 1
STORE 35
SET 1
STORE 37
LOAD 30
JPOS 6
JZERO 5
LOAD 30
SUB 30
SUB 30
STORE 30
LOAD 31
JPOS 10
JZERO 9
LOAD 37
SUB 37
SUB 37
STORE 37
LOAD 31
SUB 31
SUB 31
STORE 31
SET 0
STORE 32
LOAD 30
STORE 33
LOAD 31
JZERO 32
LOAD 33
SUB 31
JNEG 23
LOAD 31
STORE 34
LOAD 35
STORE 36
LOAD 33
SUB 34
SUB 34
JNEG 8
LOAD 34
ADD 34
STORE 34
LOAD 36
ADD 36
STORE 36
JUMP -10
LOAD 33
SUB 34
STORE 33
LOAD 32
ADD 36
STORE 32
JUMP -24
LOAD 37
JPOS 5
LOAD 33
SUB 33
SUB 33
STORE 33
LOAD 33
STOREI 1
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 106 	# DEBUG: ładuję idx_ref_pos
ADD  60
STORE 1
SET 103
LOADI 0
STOREI 1
LOAD 106
ADD 50
STORE 106
JUMP -155 	# FOR jump back
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 101 	# DEBUG: ładuję idx_ref_pos
ADD  60
STORE 1
SET 0
STOREI 1
RTRN 105 	# shuffle: procedure return
SET 187 	# sort: set procedure position
STORE 114
JUMP 101 	# sort: jump over procedure code
SET 1 	# FOR start
STORE 50
SET 2
STORE 117
LOAD 110
LOADI 0
STORE 118
LOAD 117
STORE 116
LOAD 118 	# FOR loop condition
SUB 116
JNEG 88
SET 111
STORE 1
LOAD 109 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 116 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
STOREI 1
SET 112
STORE 1
SET 116
LOADI 0
STOREI 1
SET 1
STORE 10
SET 112
LOADI 0
SUB 10
JPOS 3
SET 0
JUMP 2
SET 1
JZERO 53
SET 113
STORE 1
SET 1
STORE 30
SET 112
LOADI 0
SUB 30
STOREI 1
SET 111
LOADI 0
STORE 10
LOAD 109 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 113 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
SUB 10
JPOS 3
SET 0
JUMP 2
SET 1
JZERO 21
LOAD 109 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 112 	# DEBUG: ładuję idx_ref_pos
ADD  60
STORE 1
LOAD 109 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 113 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
STOREI 1
SET 112
STORE 1
SET 1
STORE 30
SET 112
LOADI 0
SUB 30
STOREI 1
JUMP 10
SET 113
STORE 1
SET 112
LOADI 0
STOREI 1
SET 112
STORE 1
SET 1
STOREI 1
JUMP -62 	# WHILE jump back
LOAD 109 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 113 	# DEBUG: ładuję idx_ref_pos
ADD  60
STORE 1
SET 111
LOADI 0
STOREI 1
LOAD 116
ADD 50
STORE 116
JUMP -89 	# FOR jump back
RTRN 115 	# sort: procedure return
SET 290 	# write: set procedure position
STORE 121
JUMP 24 	# write: jump over procedure code
SET 1 	# FOR start
STORE 50
SET 1
STORE 124
LOAD 120
LOADI 0
STORE 125
LOAD 124
STORE 123
LOAD 125 	# FOR loop condition
SUB 123
JNEG 11
LOAD 119 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 123 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
PUT 0
LOAD 123
ADD 50
STORE 123
JUMP -12 	# FOR jump back
RTRN 122 	# write: procedure return
SET 149
STORE 1
SET 23
STOREI 1
SET 100
STORE 40
SET 126
STOREI 40
SET 101
STORE 40
SET 149
STOREI 40
SET 328 	# CALL: set return position
STORE 105
RTRN 104 	# CALL: go to shuffle procedure
SET 119
STORE 40
SET 126
STOREI 40
SET 120
STORE 40
SET 149
STOREI 40
SET 339 	# CALL: set return position
STORE 122
RTRN 121 	# CALL: go to write procedure
SET 1234567890
PUT 0
SET 109
STORE 40
SET 126
STOREI 40
SET 110
STORE 40
SET 149
STOREI 40
SET 352 	# CALL: set return position
STORE 115
RTRN 114 	# CALL: go to sort procedure
SET 119
STORE 40
SET 126
STOREI 40
SET 120
STORE 40
SET 149
STOREI 40
SET 363 	# CALL: set return position
STORE 122
RTRN 121 	# CALL: go to write procedure
HALT
