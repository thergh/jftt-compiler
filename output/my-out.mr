SET 3 	# proc: set procedure position
STORE 104
JUMP 65 	# proc: jump over procedure code
SET 1 	# FOR start
STORE 50
LOAD 101
LOADI 0
STORE 107
LOAD 102
LOADI 0
STORE 108
LOAD 107
STORE 106
LOAD 108 	# FOR loop condition
SUB 106
JNEG 51
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 106 	# DEBUG: ładuję idx_ref_pos
ADD  60
STORE 1
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 106 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
STORE 30
LOAD 103
LOADI 0
STORE 31
STORE 32
SET 0
STORE 33
SET 1
STORE 34
LOAD 31
JPOS 9
JZERO 8
SUB 31
SUB 31
STORE 32
LOAD 30
SUB 30
SUB 30
STORE 30
LOAD 32
JZERO 8
LOAD 33
ADD 30
STORE 33
LOAD 32
SUB 34
STORE 32
JUMP -8
LOAD 33
STOREI 1
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 106 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
PUT 0
LOAD 106
ADD 50
STORE 106
JUMP -52 	# FOR jump back
RTRN 105 	# proc: procedure return
SET 130
STORE 1
SET 0
STOREI 1
SET 131
STORE 1
SET 20
STOREI 1
SET 132
STORE 1
SET 10
STOREI 1
SET 1 	# FOR start
STORE 50
SET 0
STORE 134
SET 20
STORE 135
LOAD 134
STORE 133
LOAD 135 	# FOR loop condition
SUB 133
JNEG 13
LOAD 133
STORE 60
SET 109
ADD 60
STORE 1
SET 133
LOADI 0
STOREI 1
LOAD 133
ADD 50
STORE 133
JUMP -14 	# FOR jump back
SET 100
STORE 40
SET 109
STOREI 40
SET 101
STORE 40
SET 130
STOREI 40
SET 102
STORE 40
SET 131
STOREI 40
SET 103
STORE 40
SET 132
STOREI 40
SET 121 	# CALL: set return position
STORE 105
RTRN 104 	# CALL: go to proc procedure
HALT
