SET 3 	# licz: set procedure position
STORE 103
JUMP 91 	# licz: jump over procedure code
SET 1 	# FOR start
STORE 50
SET 2
STORE 106
LOAD 101
LOADI 0
STORE 107
LOAD 106
STORE 105
LOAD 107 	# FOR loop condition
SUB 105
JNEG 12
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 105 	# DEBUG: ładuję idx_ref_pos
ADD  60
STORE 1
SET 1
STOREI 1
LOAD 105
ADD 50
STORE 105
JUMP -13 	# FOR jump back
SET 1 	# FOR start
STORE 50
SET 2
STORE 108
LOAD 101
LOADI 0
STORE 109
LOAD 108
STORE 105
LOAD 109 	# FOR loop condition
SUB 105
JNEG 55
SET 0
STORE 10
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 105 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
SUB 10
JPOS 3
SET 0
JUMP 2
SET 1
JZERO 38
SET 102
STORE 1
SET 105
LOADI 0
STORE 30
SET 105
LOADI 0
ADD 30
STOREI 1
LOAD 101
LOADI 0
STORE 10
SET 102
LOADI 0
SUB 10
JPOS 3
SET 1
JUMP 2
SET 0
JZERO 18
LOAD 100 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 102 	# DEBUG: ładuję idx_ref_pos
ADD  60
STORE 1
SET 0
STOREI 1
SET 102
STORE 1
SET 105
LOADI 0
STORE 30
SET 102
LOADI 0
ADD 30
STOREI 1
JUMP -28 	# WHILE jump back
LOAD 105
ADD 50
STORE 105
JUMP -56 	# FOR jump back
RTRN 104 	# licz: procedure return
SET 96 	# wypisz: set procedure position
STORE 112
JUMP 34 	# wypisz: jump over procedure code
SET 1 	# FOR_DOWN start
STORE 50
LOAD 111
LOADI 0
STORE 115
SET 2
STORE 116
LOAD 115
STORE 114
LOAD 116
SUB 114
JPOS 21
SET 0
STORE 10
LOAD 110 	# DEBUG: ładuję arr_ref_pos
STORE  60
LOAD 114 	# DEBUG: ładuję idx_ref_pos
ADD  60
LOADI 0
SUB 10
JPOS 3
SET 0
JUMP 2
SET 1
JZERO 4
SET 114
LOADI 0
PUT 0
LOAD 114
SUB 50
STORE 114
JUMP -22 	# FOR_DOWN jump back
RTRN 113 	# wypisz: procedure return
SET 117
STORE 1
SET 100
STOREI 1
SET 100
STORE 40
SET 118
STOREI 40
SET 101
STORE 40
SET 117
STOREI 40
SET 144 	# CALL: set return position
STORE 104
RTRN 103 	# CALL: go to licz procedure
SET 110
STORE 40
SET 118
STOREI 40
SET 111
STORE 40
SET 117
STOREI 40
SET 155 	# CALL: set return position
STORE 113
RTRN 112 	# CALL: go to wypisz procedure
HALT
